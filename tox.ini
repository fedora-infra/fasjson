[tox]
envlist = lint,format,licenses,docs,security,covclean,{py39,py310}-{unittest},covreport
isolated_build = true

[testenv]
passenv = HOME
sitepackages = false
skip_install = true
# Use allowlist for poetry when poetry 1.2+ is more widespread
# allowlist_externals =
#     poetry
deps =
    poetry>=1.2
commands_pre =
    poetry install
commands =
    unittest: poetry run pytest -vv --cov --cov-append --cov-report= fasjson/tests/unit {posargs}
depends =
    {py39,py310}: covclean
    covreport: py39-unittest,py310-unittest

[testenv:covreport]
basepython = python3.10
commands =
    -poetry run coverage html
    poetry run coverage report -m

[testenv:covclean]
commands = poetry run coverage erase


[testenv:docs]
changedir = docs
deps =
    {[testenv]deps}
    -rdocs/requirements.txt
whitelist_externals =
    rm
    mkdir
commands=
    rm -rf _build
    rm -rf _source
    rm -rf _api
    mkdir _api
    poetry run sphinx-build -W -b html -d {envtmpdir}/doctrees .  _build/html

[testenv:lint]
commands =
    pre-commit run --all-files flake8

[testenv:format]
commands =
    pre-commit run --all-files black
    pre-commit run --all-files isort

[testenv:licenses]
commands =
    {toxinidir}/devel/run-liccheck.sh

[testenv:security]
commands =
    poetry run pip install --upgrade pip
    pre-commit run --all-files bandit
    poetry run safety check --full-report -i 51499
# Ignore 51499: we don't use the wheel CLI. <https://pyup.io/v/51499/f17/>


[flake8]
show-source = True
max-line-length = 100
exclude = .git,.tox,dist,*egg
