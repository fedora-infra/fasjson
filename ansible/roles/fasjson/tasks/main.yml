---
- name: Install RPM packages
  dnf:
    name:
      - ipa-client
      - httpd
      - mod_auth_gssapi
      - mod_session
      - python3-mod_wsgi
      - python3-dns
      - python3-flask
      - python3-gssapi
      - python3-ldap
      - python3-pip
      - python3-wheel
      - python3-devel
      - openldap-devel
      - krb5-devel
      - '@Development Tools'
    state: present

- name: Install python dependencies
  shell: pip-3 install .
  args:
    chdir: /vagrant/
  become: yes

- name: Copy wsgi
  copy:
    src: fasjson.wsgi
    dest: /usr/share/fasjson/
    mode: 0644
    owner: vagrant
    group: vagrant

- name: Allow apache to to see /usr/share/fasjson/
  sefcontext:
    target: '/usr/share/fasjson(/.*)?'
    setype: httpd_sys_content_t

- name: Uninstall any old clients
  shell: ipa-client-install --uninstall --unattended
  ignore_errors: yes
  become: yes

- name: Enroll system as IPA client
  become: yes
  shell: ipa-client-install --hostname fasjson.example.test --domain example.test --realm EXAMPLE.TEST --server ipa.example.test -p admin -w adminPassw0rd! -U -N --force-join

- name: kinit
  become: yes
  shell: echo "adminPassw0rd!" | kinit admin@EXAMPLE.TEST

- name: Check that the HTTP service exists
  become: yes
  shell: ipa service-find HTTP/fasjson.example.test
  ignore_errors: True
  register: ipa_service_exists

- name: Create the service in IPA
  become: yes
  shell: ipa service-add HTTP/fasjson.example.test --force
  when: ipa_service_exists.rc == 1

- name: Get service keytab for HTTPd
  become: yes
  shell: ipa-getkeytab -p HTTP/fasjson.example.test -k /var/lib/gssproxy/httpd.keytab
  args:
    creates: /var/lib/gssproxy/httpd.keytab

- name: Set the correct permissions on keytab
  file:
    path: /var/lib/gssproxy/httpd.keytab
    owner: root
    group: root
    mode: 0640
  become: yes

- name: Copy gssproxy conf
  copy:
    src: config/gssproxy-fasjson.conf
    dest: /etc/gssproxy/99-fasjson.conf
    mode: 0644
    owner: root
    group: root

- name: Enable and restart GSSProxy
  systemd:
    state: restarted
    name: gssproxy
    enabled: yes
    daemon_reload: yes

- name: Configure temporary files
  copy:
    src: config/tmpfiles-fasjson.conf
    dest: /etc/tmpfiles.d/fasjson.conf

- name: Create temporary file
  shell: systemd-tmpfiles --create

- name: Tune SELinux Policy
  seboolean:
    name: httpd_can_connect_ldap
    state: yes
    persistent: yes

- name: Create Apache service
  file:
    path: /etc/systemd/system/httpd.service.d
    state: directory
    mode: 0755

- name: Copy configs for Apache
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - src: "config/systemd-httpd-service-fasjson.conf"
      dest: "/etc/systemd/system/httpd.service.d/fasjson.conf"
    - src: "config/httpd-fasjson.conf"
      dest: "/etc/httpd/conf.d/fasjson.conf"

- name: Enable and restart Apache
  systemd:
    state: restarted
    name: httpd
    enabled: yes
    daemon_reload: yes

