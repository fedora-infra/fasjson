Fedora Accounts System JSON API Documentation
=============================================

License: GPLv3

Usage Documentation
-------------------

Welcome to the documentation for the Fedora Accounts System JSON API. This document provides examples and explanations for using various API endpoints.

Before You Begin
~~~~~~~~~~~~~~~~~

Before using the API endpoints, ensure you have obtained and cached Kerberos tickets using the `kinit` command:

```bash
$ kinit
Also, include the --negotiate option in all curl commands for SPNEGO authentication.


**/me/ Endpoint

The `/me/` endpoint retrieves information about the connected user.

Example Usage:

1. Fetch information about the connected user:

    ```bash
    $ curl --negotiate -u : http://$(hostname)/fasjson/v1/me/
    ```

    Response:

    ```json
    {
      "dn": "uid=admin,cn=users,cn=accounts,dc=$(domain)",
      "service": "...",
      "uri": "http://$(hostname)/fasjson/v1/users/admin/",
      "username": "admin"
    }
    ```

Model: Me

- dn (Exact Match): User's distinguished name.
- service (Exact Match): User's service information.
- uri (Exact Match): User's URI.
- username (Exact Match): User's username.

Explanation:

This endpoint retrieves detailed information about the authenticated user. The response includes the distinguished name, service details, URI, and username of the connected user.

**Autogenerated Documentation:

Refer to the [autogenerated documentation](https://fasjson.fedoraproject.org/docs/v1/) for additional details and examples.

**Field Masks:**

Example using field masks:

```bash
$ curl --negotiate -u : http://$(hostname)/fasjson/v1/me/?fields=dn,username
{"result": {"dn": "uid=admin,cn=users,cn=accounts,dc=$(domain)", "username": "admin"}}
```

/users/ Endpoint
The /users/ endpoint allows you to interact with user-related operations.

Example Usage:

1. List all users: 
$ curl --negotiate -u : http://$(hostname)/fasjson/v1/users/

Response:

{
  "result": [
    {"username": "user1", ...},
    {"username": "user2", ...},
    ...
  ]
}

2. Fetch information about a specific user:
$ curl --negotiate -u : http://$(hostname)/fasjson/v1/users/{username}/


Response:

{
  "certificates": [...],
  "creation": "...",
  "emails": [...],
  "github_username": "...",
  "gitlab_username": "...",
  "givenname": "...",
  ...
}


Model: User

certificates (Exact Match): User's certificates.
creation (Exact Match): User's creation timestamp.
emails (Substring Match): User's email addresses.
github_username (Substring Match): User's GitHub username.
gitlab_username (Substring Match): User's GitLab username.
givenname (Substring Match): User's given name.
...
Explanation:

The /users/ endpoint provides operations related to users. You can list all users or fetch detailed information about a specific user.

Autogenerated Documentation:

Refer to the autogenerated documentation for additional details and examples.

Field Masks:

Example using field masks:
$ curl --negotiate -u : http://$(hostname)/fasjson/v1/users/{username}/?fields=username,emails
{"result": {"username": "...", "emails": [...], ...}}



**/groups/ Endpoint**

The `/groups/` endpoint provides operations related to groups.

Example Usage:

1. List all groups:

    ```bash
    $ curl --negotiate -u : http://$(hostname)/fasjson/v1/groups/
    ```

    Response:

    ```json
    {
      "result": [
        {"groupname": "group1", ...},
        {"groupname": "group2", ...},
        ...
      ]
    }
    ```

2. Fetch information about a specific group:

    ```bash
    $ curl --negotiate -u : http://$(hostname)/fasjson/v1/groups/{groupname}/
    ```

    Response:

    ```json
    {
      "description": "...",
      "irc": "...",
      "mailing_list": "...",
      "uri": "...",
      "url": "..."
    }
    ```

Model: Group

- description (Substring Match):Group's description.
- irc (Exact Match): Group's IRC information.
- mailing_list (Substring Match): Group's mailing list.
- uri (Exact Match): Group's URI.
- url (Exact Match): Group's URL.

Explanation:

The `/groups/` endpoint provides operations related to groups. You can list all groups or fetch detailed information about a specific group.

Autogenerated Documentation:

Refer to the [autogenerated documentation](https://fasjson.fedoraproject.org/docs/v1/) for additional details and examples.

Field Masks:

Example using field masks:

```bash
$ curl --negotiate -u : http://$(hostname)/fasjson/v1/groups/{groupname}/?fields=groupname,irc
{"result": {"groupname": "...", "irc": "...", ...}}
```

